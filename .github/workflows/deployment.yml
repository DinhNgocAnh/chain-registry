name: Mock Deployment

on:
  push:
    branches:
      - main

jobs:
  mock_deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Mock deployment step
        run: echo "Mock deployment started..."

      - name: Create GitHub deployment
        id: create_deployment
        uses: actions/github-script@v7
        with:
          script: |
            const res = await github.rest.repos.createDeployment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: context.ref,
              environment: "mock-env",
              description: "Mock deployment for Jira integration",
              required_contexts: [],
              transient_environment: true,
              auto_merge: false
            });
            core.setOutput("deployment_id", res.data.id);

      - name: Set deployment status to success
        uses: actions/github-script@v7
        with:
          script: |
            await github.rest.repos.createDeploymentStatus({
              owner: context.repo.owner,
              repo: context.repo.repo,
              deployment_id: ${{ steps.create_deployment.outputs.deployment_id }},
              state: "success",
              environment: "mock-env",
              log_url: "https://github.com/${context.repo.owner}/${context.repo.repo}/actions/runs/${context.runId}",
              description: "Mock deployment completed"
            });
